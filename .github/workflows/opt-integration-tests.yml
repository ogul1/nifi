# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# skip assemblies and modules covered separately by the system-tests workflow
# skip unit tests (surefire), run integration tests (failsafe), python ITs included as part of the system-tests workflow

name: Modified integration-tests
env:
  DEFAULT_MAVEN_OPTS: -Xmx4g -XX:ReservedCodeCacheSize=1g -XX:+UseG1GC -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN
    -Daether.connector.http.retryHandler.count=5 -Daether.connector.http.connectionMaxTtl=30
    -Duser.language=en -Duser.country=GB -Duser.timezone=UTC
  MAVEN_COMMAND: ./mvnw -V -nsu -ntp -ff
  MAVEN_BUILD_ARGUMENTS: verify -P skip-unit-tests -P integration-tests -P nifi-registry-integration-tests
  MAVEN_BUILD_EXCLUDE_PROJECTS: -pl -:minifi-assembly -pl -:nifi-assembly -pl -:nifi-toolkit-assembly
    -pl -:nifi-registry-assembly -pl -:nifi-registry-toolkit-assembly -pl -:nifi-runtime-manifest
    -pl -:nifi-runtime-manifest-test -pl -:nifi-stateless-assembly -pl -:nifi-stateless-system-test-suite
    -pl -:nifi-system-test-suite -pl -:nifi-nar-provider-assembly -pl -:nifi-py4j-integration-tests
    -pl -:nifi-docs -pl -:nifi-maven-archetypes -pl -:nifi-processor-bundle-archetype
    -pl -:nifi-service-bundle-archetype
permissions:
  contents: read
jobs:
  build_and_test:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    name: build_and_test
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build_and_test.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/nifi/nifi', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout Code
      uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Set up Java Zulu 21
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 21
        cache: maven
    - run: touch optcd-4.txt
    - name: System Information
      run: |-
        hostname
        cat /proc/cpuinfo
        cat /proc/meminfo
        df
        docker info
    - run: touch optcd-5.txt
    - name: Build and Run Tests
      env:
        MAVEN_OPTS: ${{ env.DEFAULT_MAVEN_OPTS }}
      run: |-
        ${{ env.MAVEN_COMMAND }} ${{ env.MAVEN_BUILD_ARGUMENTS }} ${{ env.MAVEN_BUILD_EXCLUDE_PROJECTS }}
    - run: touch optcd-6.txt
    - name: Upload Troubleshooting Logs
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-21-failsafe-logs
        path: |-
          **/target/failsafe-reports/**/*.txt
        retention-days: 7
    - run: touch optcd-7.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build_and_test
        path: /home/runner/inotifywait-log-build_and_test.csv
'on':
- push
- workflow_dispatch
